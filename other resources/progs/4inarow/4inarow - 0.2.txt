	jmp start
	.org 42
ntrl	.EQU '=
ply1	.EQU 'O
ply2	.EQU 'X
currentTurn	.byte 'O
winner	.byte '=
	.org 100
resetGame	ldx #0
	ldaa #ntrl
loopClearBoard	staa 0,x
	inx
	cpx #42
	bne loopClearBoard
	ldaa #ply1
	staa currentTurn
	rts
drawBoard	stx 43
	staa 45
	ldx #41
loopDrawBoardPsh	ldaa 0,x
	psha
	dex
	cpx #$FFFF
	bne loopDrawBoardPsh
	ldx #$FB00
	clra
loopDrawBoardPul	pulb
	stab 0,x
	inx
	inca
	cmpa #7
	bne loopDrawBoardPul
	ldab #47
	clra
	abx
	cpx #$FC44
	bne loopDrawBoardPul
	ldx 43
	ldaa 45
	rts
start	jsr resetGame
	jsr drawBoard
round	nop
getInput	WAI
	ldab $FFF0
	stab $FB35
	cmpb #'1
	beq placeMove
	cmpb #'2
	beq placeMove
	cmpb #'3
	beq placeMove
	cmpb #'4
	beq placeMove
	cmpb #'5
	beq placeMove
	cmpb #'6
	beq placeMove
	cmpb #'7
	beq placeMove
	jmp getInput
placeMove	subb #49
	ldx #0
	abx
	ldab 0,x
	cmpb #ntrl
	bne getInput
	ldaa currentTurn
	staa 0,x
	jsr drawBoard
fallMove	ldab 7,x
	cmpb #ntrl
	bne endTurn
	ldab #ntrl
	stab 0,x
	ldab #7
	abx
	staa 0,x
	jsr drawBoard
	cpx #34
	bgt endTurn
	jmp fallMove
endTurn	jsr check
	cmpa #ply1
	beq stToPly2
	ldab #ply1
	stab currentTurn
	jmp round
stToPly2	ldab #ply2
	stab currentTurn
	jmp round
check	ldx #0
	staa 46
	stab 47
checkVer	ldaa 14,x
	cmpa #ntrl
	beq nextVer
	cmpa 21,x
	bne nextVer
	cmpa 28,x
	bne chkVerUp
	cmpa 7,x
	bne chkVerDn
	jmp endGame
chkVerUp	cmpa 7,x
	bne nextVer
	cmpa 0,x
	bne nextVer
	jmp endGame
chkVerDn	cmpa 35,x
	bne nextVer
	jmp endGame
nextVer	inx
	cpx #7
	bne checkVer
	ldx #0
	Ida #0
	ldab #7
checkHor	ldaa 3,x
	cmpa #ntrl
	bne nextHor
	cmpa 2,x
	bne chkHor3
	cmpa 1,X
	bne chkHor2
	cmpa 0,X
	bne chkHor1
	jmp endGame
chkHor3	cmpa 6,x
	bne nextHor
chkHor2	cmpa 5,X
	bne nextHor
chkHor1	cmpa 4,X
	bne nextHor
	jmp endGame
nextHor	abx
	cpx #42
	bne checkHor

chkReturn	ldaa 46
	ldab 47
	rts

endGame	staa winner
	nop



















